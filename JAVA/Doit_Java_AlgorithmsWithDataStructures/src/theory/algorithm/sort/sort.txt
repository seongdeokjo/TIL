정렬 : 핵심 항목(key)의 대소 관계에 따라 데이터 집합을 일정한 순서로 줄지어 늘어서도록 바꾸는 작업이다.

정렬 알고리즘의 안정성 : 같은 값의 키를 가진 요소의 순서가 정렬 전후에도 유지된다.
	
	내부 정렬(internal sorting) : 하나의 배열에서 작업할 수 있는 경우
	외부 정렬(external sorting) : 하나의 배열에서 작업할 수 없는 경우
정렬 알고리즘의 핵심 요소 : 교환, 선택, 삽입 
	* 오름 차순 정렬 : 왼쪽의 값이 오른쪽의 값보다 작아야 한다. ex) 1,2,3,4,5
	* 내림 차순 정렬 : 왼쪽의 값이 오른쪽의 값보다 커야 한다.	ex) 5,4,3,2,1

1. 버블 정렬 : 이웃한 두 요소의 대소 관계를 비교하여 교환을 반복한다.	
			- 요소의 개수가 n개인 배열에서 n-1회 비교, 교환을 하고 나면 가장 작은 요소가 맨 처음으로 이동한다.
			- 이러 일련의 과정(비교,교환 작업)을 패스(pass)라고 한다. 
			- 비교 횟수의 평균값 : (n-1)+(n-2)+....+1 = n(n-1) / 2
			- 교환 횟수의 평균값 : 비교 횟수의 절반인 n(n-1) / 4회 이지만 메서드 안에서의 값의 이동이 3회 발생하므로 이동 횟수의 평균은 3n(n-1) / 4회 이다.
2. 단순 선택 정렬(straight selection sort) : 가장 작은 요소부터 선택해 알맞은 위치로 옮겨서 순서대로 정렬하는 알고리즘
			- 1. 아직 정렬하지 않은 부분에서 가장 작은 키의 값(a[min]) 을 선택
			- 2. (a[min])과 아직 정렬하지 않은 부분의 첫 번째 요소를 교환
			- 비교 횟수 : (n^2 - n) / 2회 ** 서로 떨어져 있는 요소를 교환하는 것이기 때문에 안정적이지 못하다			