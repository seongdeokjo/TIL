배열 : 같은 자료형의 변수로 이루어진 구성 요소(component)가 모인 것.

배열 선언 방식: int[] a; , int a[]; // int형인 배열임을 명확하게 나타내는 전자의 형식이 많이 사용된다.
	ex) a = new int[5]; // a는 길이가 5인 배열을 참조한다.
		int[] a //1 = new int[5] //2;  
		1.본체를 참조하는 배열 변수 a | 2.배열 본체를 생성하는 본체에 대한 참조를 생성
구성 요소 : 배열 안의 모든 구성 요소의 형은 같고 직선 모양으로 줄지어 있다. 
		 배열의 개별 요소에 접근하기 위해 사용하는 것이 연산자 [] 안에 넣는 정수형 인덱스이다.
		 배열 변수 이름[인덱스] // 배열 안의 임의의 구성 요소 ex) 구성 요소가 n개인 배열의 구성 요소는 a[0],....a[n-1]
		 초깃값 -> 구성 요소를 초기화하는 값, 배열을 생성할 때 각 구성 요소에 넣어지는 값
구성 요솟수(길이) : 배열 변수 이름.length // 배열의 구성 요솟수

* 값을 대힙하지 않은 지역 변수 : 메서드 안에서 선언한 지역 변수는 초깃값으로 초기화되지 않는다. 
						 java에서는 초기화나 대입에 의해 값이 넣어져 있지 않은 변수로부터는 값을 꺼낼 수 없다. -> 컴파일 오류 발생
						 
배열의 요소를 하나씩 차례로 살펴보는 과정을 주사(traverse)라고 한다.

배열의 요소를 역순으로 정렬하기 : 맨 앞의 요소값과 맨 뒤의 요소값을 교환하고 각각 하나씩 안쪽의 요소값을 교환한다.
						 교환 횟수는 '요소 개수/2', 이 나눗셈에서 나머지는 버림, 요소의 개수가 홀수인 경우 가운데 요소는 교환할 필요x 						 
빈 배열(empty array) : 배열 요솟수는 0이어도 된다.
배열 요소의 접근 : 배열 접근은 모두 런타임(실행 시)에 검사됨, 만약 0 미만 또는 배열 요솟수 이상의 인덱스를 사용하면
			   IndexOutOfBoundsException가 발생한다.
배열 초기화의 쉼표 : 배열 초기화는 마지막 요소에 대한 초기화 뒤에 '추가로' 쉼표(,)를 넣을 수 있다.			   
-------------------------------------------------------------------------------------------------------------------------

다차원 배열 : 배열을 구성 요소로 하는 것이 2차원 배열, 2차원 배열을 구성 요소로 하는 것이 3차원 배열 .... 
		-> 2차원 배열은 가로와 세로로 '행'과'열'이 늘어선 '표'와 같은 모양의 이미지이다.
		
다차원 배열의 내부 : ex) int[][] x = new int[2][4]; // 배열 x의 배열 변수 선언과 본체의 생성을 동시에 수행
					int[][] x;				   // 배열 x의 선언 
					x = new int[2][];		   // 배열 본체를 생성, x가 그 것을 참조하도록 대입, 구성 자료형이 int[]형이고 구성 요솟수가 2인 배열
					x[0] = new int[4];		   // 배열 본체를 생성, x[0]이 그 것을 참조하도록 대입, 구성 자료형이 int형이고 구성 요솟수가 4인 배열
					x[1] = new int[4];		   // 배열 본체를 생성, x[1]이 그 것을 참조하도록 대입, 구성 자료형이 int형이고 구성 요솟수가 4인 배열

다차원 배열의 복제(clone) : 최상위의 1레벨만 수행, 밑의 예에서 a[0]과 a[1]만 복제되고 그 아래 레벨의 배열은 복제되지 않고 공유된다.
					   ex) int[][] a = {{1,2,3,4},{5,6,7}};
					   	   int[][] b = a.clone();	